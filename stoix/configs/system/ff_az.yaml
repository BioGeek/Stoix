# --- Defaults FF-AZ ---
# This implementation of AZ is not an exact replica of the original AlphaZero algorithm and serves more as an example.
# It is a simplified version that uses the same training loop as PPO i.e. epochs and minibatches of on-policy data.
# Additionally, it uses a clipped value loss and entropy loss. Additionally, the search method used can be chosen
# between muzero mcts, gumbel mcts from mctx.

system_name: ff_az # Name of the system.

# --- RL hyperparameters ---
actor_lr: 3e-4 # Learning rate for actor network
critic_lr: 3e-4 # Learning rate for critic network
update_batch_size: 1 # Number of vectorised gradient updates per device.
rollout_length: 8 # Number of environment steps per vectorised environment.
epochs: 1 # Number of epochs per training data batch.
num_minibatches: 4 # Number of minibatches per epoch.
gamma: 0.99 # Discounting factor.
gae_lambda: 0.95 # Lambda value for GAE computation.
ent_coef: 0.0 # Entropy regularisation term for loss function.
vf_coef: 1.0 # Critic weight in
clip_eps: 0.2 # Clipping value for value function updates.
max_grad_norm: 0.5 # Maximum norm of the gradients for a weight update.
decay_learning_rates: False # Whether learning rates should be linearly decayed during training.
num_simulations: 5 # Number of simulations to run.
max_depth: ~ # Maximum depth of the search tree.
search_method : gumbel # Search method to use. Options: gumbel, muzero.
